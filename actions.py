from rasa_core_sdk import Action
from bs4 import BeautifulSoup
import requests
import json
import time
import re

class ActionGetNewst(Action):

    def name(self):
        return 'action_get_news'

    def run(self, dispatcher, tracker, domain):
        category = tracker.get_slot('category')
        print(category)
        if category == None:
            dispatcher.utter_message('Gi√° tr·ªã None ch·ª©ng t·ªè s·∫£n ph·∫©m b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng c√≥ trong danh m·ª•c c·ªßa ch√∫ng t√¥i üò¢‚ùó Xin vui l√≤ng ƒëi·ªÅn l·∫°i!!!')
        else:
            url = 'https://mapi.sendo.vn/mob/product/search?p=1&q={category}.json'.format(category=category.split())
            response = requests.get(url).text
            data = []
            n = 0
            while n < 3:
                n += 1
                json_data = json.loads(response)['data'][n]
                data.append(json_data)
            for results in range(len(data)):
                message = f'''
{str(results + 1)}.ID c·ªßa s·∫£n ph·∫©m: {data[results]['product_id']}
T√™n s·∫£n ph·∫©m: {data[results]['name']}
Url s·∫£n ph·∫©m: sendo.vn/{data[results]['cat_path']}
Gi√° b√°n s·∫£n ph·∫©m: {data[results]['price']}ƒë
Gi√° b√°n sau khuy·∫øn m√£i: {data[results]['final_price']}ƒë
                            '''
                dispatcher.utter_message(message)
        return[]
class ActionGetNum(Action):

    def name(self):
        return 'action_get_num'

    def run(self, dispatcher, tracker, domain):
        number = tracker.get_slot('number')
        print(number)
        category = tracker.get_slot('category')
        print(category)
        if category == None and number == None:
            dispatcher.utter_message('Gi√° tr·ªã None ch·ª©ng t·ªè s·∫£n ph·∫©m b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng c√≥ trong danh m·ª•c c·ªßa ch√∫ng t√¥i üò¢‚ùó Xin vui l√≤ng ƒëi·ªÅn l·∫°i!!!')
        elif number == None:
            dispatcher.utter_message('Vui l√≤ng ƒëi·ªÅn s·ªë l∆∞·ª£ng s·∫£n ph·∫©m b·∫°n mu·ªën t√¨m ‚ùó')
        else:
            url = 'https://mapi.sendo.vn/mob/product/search?p=1&q={category}.json'.format(category=category.split())
            response = requests.get(url).text
            data = []
            n = 0
            if int(number) > len(json.loads(response)['data']):
                dispatcher.utter_message('Xin l·ªói s·ªë l∆∞·ª£ng s·∫£n ph·∫©m qu√° l·ªõn, s·ªë l∆∞·ª£ng t·ªëi ƒëa c√≥ th·ªÉ t√¨m ki·∫øm l√† 34. Xin vui l√≤ng ƒëi·ªÅn l·∫°i!!!')
            else:
                while n < int(number):
                    n += 1
                    json_data = json.loads(response)['data'][n]
                    data.append(json_data)
                for results in range(len(data)):
                    message = f'''
{str(results + 1)}.ID c·ªßa s·∫£n ph·∫©m: {data[results]['product_id']}
T√™n s·∫£n ph·∫©m: {data[results]['name']}
Url s·∫£n ph·∫©m: sendo.vn/{data[results]['cat_path']}
Gi√° b√°n s·∫£n ph·∫©m: {data[results]['price']}ƒë
Gi√° b√°n sau khuy·∫øn m√£i: {data[results]['final_price']}ƒë
                            '''
                    dispatcher.utter_message(message)
        return[]

class ActionGetid(Action):
    def name(self):
        return 'action_get_id'

    def run(self, dispatcher, tracker, domain):
        productid = tracker.get_slot('productid')
        print(productid )
        url = 'https://mapi.sendo.vn/mob/product/{productid}/detail/'.format(productid=productid)
        response = requests.get(url).text
        json_data = json.loads(response)
        if json_data == [] or productid == None:
            dispatcher.utter_message('Xin l·ªói Id c·ªßa b·∫°n kh√¥ng h·ª£p l·ªá ho·∫∑c s·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i. Id s·∫£n ph·∫©m l√† m·ªôt chu·ªói bao g·ªìm 8 ch·ªØ s·ªë ')
        else:
            if json_data['stock_status'] == 1:
                sale = 'C√≤n h√†ng'
            else:
                sale = 'H·∫øt h√†ng'
            soup = BeautifulSoup(json_data['description'], 'html.parser')
            des = []
            for x in soup.find_all('p'): des.append(x.string)
            res = []
            for val in des:
                if val != None:
                    res.append(val)
            if soup.find('a') != None:
                try:
                    string_length = len(soup.find('a')['href']) + 2
                    string_revised = soup.find('a')['href'].center(string_length)
                    res.insert(1, string_revised)
                except KeyError:
                    pass
            else:
                pass
            review = ''.join(map(str, res))
            review = re.sub('[\xa0]', ' ', review)
            message = f'''
T√™n s·∫£n ph·∫©m: {json_data['name']}
Gi√° b√°n s·∫£n ph·∫©m: {json_data['price']}ƒë
ID c·ªßa shop: {json_data['admin_id']}
Gi√° khuy·∫øn m√£i: {json_data['special_price']}
Url c·ªßa s·∫£n ph·∫©m: sendo.vn/{json_data['cat_path']}
M√¥ t·∫£ chi ti·∫øt s·∫£n ph·∫©m: {review}
T·ªïng s·ªë l∆∞·ª£t y√™u th√≠ch s·∫£n ph·∫©m: {json_data['counter_like']}
Tr·∫°ng th√°i c√≤n h√†ng: {sale}
Th√¥ng tin ch·ªß shop: T√™n Shop- {json_data['shop_info']['shop_name']}, S·ªë ƒëi·ªán tho·∫°i- {json_data['shop_info']['phone_number']}
                    '''
            dispatcher.utter_message(message)
        return[]


time.sleep(1)